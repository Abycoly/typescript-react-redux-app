{"ast":null,"code":"import { TYPES } from \"../actions/action-types\";\nconst quizInitialSate = {\n  quizListItem: [],\n  currentQuizItem: 0,\n  countCorrectAnswer: 0\n};\nexport const QuizReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : quizInitialSate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TYPES.getQuizListItems:\n      return { ...state,\n        quizListItem: action.payload\n      };\n\n    case TYPES.gaveCorrectAnswer:\n      return { ...state,\n        countCorrectAnswer: state.countCorrectAnswer + 1\n      };\n\n    case TYPES.setNextQuestion:\n      return { ...state,\n        currentQuizItem: state.currentQuizItem + 1\n      };\n\n    case TYPES.restart:\n      return { ...state,\n        currentQuizItem: 0,\n        countCorrectAnswer: 0\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/acer/Desktop/PROJET_CODE/TypeScript-Quiz-Starter-master/src/reducers/quiz.ts"],"names":["TYPES","quizInitialSate","quizListItem","currentQuizItem","countCorrectAnswer","QuizReducer","state","action","type","getQuizListItems","payload","gaveCorrectAnswer","setNextQuestion","restart"],"mappings":"AACA,SAASA,KAAT,QAAsB,yBAAtB;AASA,MAAMC,eAAkC,GAAG;AAC3CC,EAAAA,YAAY,EAAE,EAD6B;AAE3CC,EAAAA,eAAe,EAAG,CAFyB;AAG3CC,EAAAA,kBAAkB,EAAG;AAHsB,CAA3C;AAKA,OAAO,MAAMC,WAAW,GAAG,YAAgE;AAAA,MAA/DC,KAA+D,uEAAvDL,eAAuD;AAAA,MAAtCM,MAAsC;;AAC3F,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,KAAK,CAACS,gBAAX;AACA,aAAO,EACP,GAAGH,KADI;AAEPJ,QAAAA,YAAY,EAAIK,MAAD,CAAoCG;AAF5C,OAAP;;AAIC,SAAKV,KAAK,CAACW,iBAAX;AACA,aAAO,EACP,GAAGL,KADI;AAEPF,QAAAA,kBAAkB,EAAGE,KAAK,CAACF,kBAAN,GAA2B;AAFzC,OAAP;;AAIA,SAAKJ,KAAK,CAACY,eAAX;AACA,aAAO,EACP,GAAGN,KADI;AAEPH,QAAAA,eAAe,EAAGG,KAAK,CAACH,eAAN,GAAwB;AAFnC,OAAP;;AAIA,SAAKH,KAAK,CAACa,OAAX;AACA,aAAO,EACP,GAAGP,KADI;AAEPH,QAAAA,eAAe,EAAG,CAFX;AAGPC,QAAAA,kBAAkB,EAAG;AAHd,OAAP;;AAOA;AACA,aAAOE,KAAP;AAzBD;AA2BE,CA5BK","sourcesContent":["import { AnyAction } from \"redux\";\r\nimport { TYPES } from \"../actions/action-types\";\r\nimport { Action, IQuizListItem } from \"../models/index\";\r\n\r\nexport interface IQuizInitialSate {\r\nquizListItem : IQuizListItem[],\r\ncurrentQuizItem : number,\r\ncountCorrectAnswer : number\r\n}\r\n\r\nconst quizInitialSate : IQuizInitialSate = {\r\nquizListItem: [],\r\ncurrentQuizItem : 0,\r\ncountCorrectAnswer : 0\r\n}\r\nexport const QuizReducer = (state = quizInitialSate, action: AnyAction): IQuizInitialSate=>{\r\nswitch (action.type) {\r\ncase TYPES.getQuizListItems:\r\nreturn {\r\n...state,\r\nquizListItem : (action as Action<IQuizListItem[]>).payload\r\n\t}\r\n\tcase TYPES.gaveCorrectAnswer:\r\n\treturn {\r\n\t...state,\r\n\tcountCorrectAnswer : state.countCorrectAnswer + 1\r\n\t}\r\n\tcase TYPES.setNextQuestion:\r\n\treturn {\r\n\t...state,\r\n\tcurrentQuizItem : state.currentQuizItem + 1\r\n\t}\r\n\tcase TYPES.restart:\r\n\treturn {\r\n\t...state,\r\n\tcurrentQuizItem : 0,\r\n\tcountCorrectAnswer : 0\r\n\t}\r\n\r\n\r\n\tdefault:\r\n\treturn state\r\n\t}\r\n\t}"]},"metadata":{},"sourceType":"module"}