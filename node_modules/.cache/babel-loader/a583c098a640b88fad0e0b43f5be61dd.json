{"ast":null,"code":"import axios from \"axios\";\nimport { TYPES } from \"./action-types\";\nexport const getQuizListItem = (questionAmount, difficulty) => {\n  return async dispatch => {\n    const r = await axios.get(`https://opentdb.com/api.php?amount=${questionAmount}&difficulty=${difficulty}&type=boolean`);\n    dispatch({\n      type: TYPES.getQuizListItems,\n      payload: r.data.results\n    });\n  };\n};\nexport const giveAnswer = (isCorrectAnswer, isLastQuestion) => {\n  return async dispatch => {\n    if (isCorrectAnswer) {\n      dispatch({\n        type: TYPES.gaveCorrectAnswer\n      });\n    }\n\n    if (!isLastQuestion) {\n      dispatch({\n        type: TYPES.setNextQuestion\n      });\n    }\n  };\n};\nexport const restart = () => {\n  return async dispatch => {};\n};","map":{"version":3,"sources":["C:/Users/acer/Desktop/PROJET_CODE/TypeScript-Quiz-Starter-master/src/actions/quiz.ts"],"names":["axios","TYPES","getQuizListItem","questionAmount","difficulty","dispatch","r","get","type","getQuizListItems","payload","data","results","giveAnswer","isCorrectAnswer","isLastQuestion","gaveCorrectAnswer","setNextQuestion","restart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,cAAD,EAA0BC,UAA1B,KAAgE;AAC9F,SAAO,MAAMC,QAAN,IAAiD;AACvD,UAAMC,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAsB,sCAAqCJ,cAAe,eAAcC,UAAW,eAAnG,CAAhB;AACAC,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,KAAK,CAACQ,gBAAb;AAA+BC,MAAAA,OAAO,EAAGJ,CAAC,CAACK,IAAF,CAAOC;AAAhD,KAAD,CAAR;AACA,GAHD;AAIA,CALM;AAOP,OAAO,MAAMC,UAAU,GAAG,CAACC,eAAD,EAA2BC,cAA3B,KAAqD;AAC9E,SAAO,MAAMV,QAAN,IAAiD;AACvD,QAAIS,eAAJ,EAAqB;AACpBT,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,KAAK,CAACe;AAAd,OAAD,CAAR;AACA;;AACD,QAAI,CAACD,cAAL,EAAqB;AACpBV,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEP,KAAK,CAACgB;AAAd,OAAD,CAAR;AACA;AACD,GAPD;AAQA,CATM;AAUP,OAAO,MAAMC,OAAO,GAAG,MAAI;AAC1B,SAAO,MAAMb,QAAN,IAAiD,CAEvD,CAFD;AAIA,CALM","sourcesContent":["import axios from \"axios\"\r\nimport { AnyAction} from \"redux\"\r\nimport { ThunkDispatch } from \"redux-thunk\"\r\nimport { IQuizList } from \"../models\"\r\nimport { TYPES } from \"./action-types\"\r\n\r\nexport const getQuizListItem = (questionAmount : number, difficulty: \"easy\"|\"medium\"|\"hard\") =>{\r\n\treturn async(dispatch: ThunkDispatch<{},{},AnyAction>)=>{\r\n\t\tconst r = await axios.get<IQuizList>(`https://opentdb.com/api.php?amount=${questionAmount}&difficulty=${difficulty}&type=boolean`)\r\n\t\tdispatch({type: TYPES.getQuizListItems, payload : r.data.results})\r\n\t}\r\n}\r\n\r\nexport const giveAnswer = (isCorrectAnswer: boolean, isLastQuestion: boolean)=>{\r\n\treturn async(dispatch: ThunkDispatch<{},{},AnyAction>)=>{\r\n\t\tif (isCorrectAnswer) {\r\n\t\t\tdispatch({ type: TYPES.gaveCorrectAnswer})\r\n\t\t}\r\n\t\tif (!isLastQuestion) {\r\n\t\t\tdispatch({ type: TYPES.setNextQuestion})\r\n\t\t}\r\n\t}\r\n}\r\nexport const restart = ()=>{\r\n\treturn async(dispatch: ThunkDispatch<{},{},AnyAction>)=>{\r\n\t\t\r\n\t}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}