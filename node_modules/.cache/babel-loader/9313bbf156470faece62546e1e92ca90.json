{"ast":null,"code":"import { TYPES } from \"../actions/action-types\";\nconst quizInitialSate = {\n  quizListItem: [],\n  currentQuizItem: 0,\n  scrore: 0\n};\nexport const QuizReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : quizInitialSate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TYPES.getQuizListItems:\n      return { ...state,\n        quizListItem: action.payload\n      };\n\n    case TYPES.incrementScrore:\n      return { ...state,\n        scrore: state.scrore + 1\n      };\n\n    case TYPES.setNextQuestion:\n      return { ...state,\n        currentQuizItem: state.currentQuizItem + 1\n      };\n\n    case TYPES.restart:\n      return { ...state,\n        currentQuizItem: 0,\n        scrore: 0\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/acer/Desktop/PROJET_CODE/TypeScript-Quiz-Starter-master/src/reducers/quiz.ts"],"names":["TYPES","quizInitialSate","quizListItem","currentQuizItem","scrore","QuizReducer","state","action","type","getQuizListItems","payload","incrementScrore","setNextQuestion","restart"],"mappings":"AACA,SAASA,KAAT,QAAsB,yBAAtB;AASA,MAAMC,eAAiC,GAAG;AACzCC,EAAAA,YAAY,EAAE,EAD2B;AAEzCC,EAAAA,eAAe,EAAE,CAFwB;AAGzCC,EAAAA,MAAM,EAAE;AAHiC,CAA1C;AAKA,OAAO,MAAMC,WAAW,GAAG,YAAkE;AAAA,MAAjEC,KAAiE,uEAAzDL,eAAyD;AAAA,MAAxCM,MAAwC;;AAC5F,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,KAAK,CAACS,gBAAX;AACC,aAAO,EACN,GAAGH,KADG;AAENJ,QAAAA,YAAY,EAAGK,MAAD,CAAoCG;AAF5C,OAAP;;AAID,SAAKV,KAAK,CAACW,eAAX;AACC,aAAO,EACN,GAAGL,KADG;AAENF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAe;AAFjB,OAAP;;AAID,SAAKJ,KAAK,CAACY,eAAX;AACC,aAAO,EACN,GAAGN,KADG;AAENH,QAAAA,eAAe,EAAEG,KAAK,CAACH,eAAN,GAAwB;AAFnC,OAAP;;AAID,SAAKH,KAAK,CAACa,OAAX;AACC,aAAO,EACN,GAAGP,KADG;AAENH,QAAAA,eAAe,EAAE,CAFX;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAAP;;AAOD;AACC,aAAOE,KAAP;AAzBF;AA2BA,CA5BM","sourcesContent":["import { AnyAction } from \"redux\";\r\nimport { TYPES } from \"../actions/action-types\";\r\nimport { Action, IQuizListItem } from \"../models/index\";\r\n\r\nexport interface IQuizInitialSate {\r\n\tquizListItem: IQuizListItem[],\r\n\tcurrentQuizItem: number,\r\n\tscrore: number\r\n}\r\n\r\nconst quizInitialSate: IQuizInitialSate = {\r\n\tquizListItem: [],\r\n\tcurrentQuizItem: 0,\r\n\tscrore: 0\r\n}\r\nexport const QuizReducer = (state = quizInitialSate, action: AnyAction): IQuizInitialSate => {\r\n\tswitch (action.type) {\r\n\t\tcase TYPES.getQuizListItems:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquizListItem: (action as Action<IQuizListItem[]>).payload\r\n\t\t\t}\r\n\t\tcase TYPES.incrementScrore:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tscrore: state.scrore + 1\r\n\t\t\t}\r\n\t\tcase TYPES.setNextQuestion:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentQuizItem: state.currentQuizItem + 1\r\n\t\t\t}\r\n\t\tcase TYPES.restart:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentQuizItem: 0,\r\n\t\t\t\tscrore: 0\r\n\t\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}