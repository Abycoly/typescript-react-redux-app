{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\PROJET_CODE\\\\TypeScript-Quiz-Starter-master\\\\src\\\\App.tsx\";\nimport React, { Component } from \"react\";\nimport { Container, Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { StyledButtonTrue, StyledButtonFalse } from \"./style\";\nimport { connect } from \"react-redux\"; // import { AnyAction } from \"redux\";\n// import { IStore } from \"./reducers\";\n\nimport { getQuizListItem } from \"./actions/quiz\";\nimport { getCurrentQuizListItem } from \"./selectors/quiz\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderHeader = () => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        mt: 10,\n        fontWeight: \"fontWeightBold\",\n        fontSize: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#e55fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \"Easy\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#2858fb\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, \"Quizy\")), /*#__PURE__*/React.createElement(Box, {\n        mt: 10,\n        fontSize: 20,\n        className: \"txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, \" Score : TODO / TODO\"));\n    };\n\n    this.renderQuestionInfo = () => {\n      const {\n        quizListLength,\n        currentQuizItemIndex\n      };\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        style: {\n          minHeight: '40vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"txt question_number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, \"Question N\\xB0 TODO / TODO \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"txt question_number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, \" Category TODO \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, \"TypeScript Quiz starter ! Ici nous devrions afficher une question !\"));\n    };\n\n    this.renderButton = () => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justify: \"space-evenly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(StyledButtonTrue, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, \"TRUE\"), /*#__PURE__*/React.createElement(StyledButtonFalse, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"FALSE\"));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getQuizListItem(10, \"easy\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, this.renderHeader(), this.renderQuestionInfo(), this.renderButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const s = state;\n  return {\n    currentQuizItem: getCurrentQuizListItem(s),\n    currentQuizItemIndex: s.quiz.currentQuizItemIndex,\n    quizListLength: s.quiz.quizListItem.length\n  };\n};\n\nconst mapDispatchToProps = {\n  getQuizListItem\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/acer/Desktop/PROJET_CODE/TypeScript-Quiz-Starter-master/src/App.tsx"],"names":["React","Component","Container","Grid","Box","StyledButtonTrue","StyledButtonFalse","connect","getQuizListItem","getCurrentQuizListItem","App","renderHeader","color","renderQuestionInfo","quizListLength","currentQuizItemIndex","minHeight","renderButton","componentDidMount","props","render","mapStateToProps","state","s","currentQuizItem","quiz","quizListItem","length","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { StyledButtonTrue, StyledButtonFalse } from \"./style\";\r\nimport { connect } from \"react-redux\";\r\n// import { AnyAction } from \"redux\";\r\n// import { IStore } from \"./reducers\";\r\nimport { getQuizListItem } from \"./actions/quiz\";\r\nimport { IQuizList, IQuizListItem } from \"./models\";\r\nimport { IStore } from \"./reducers\";\r\nimport { getCurrentQuizListItem } from \"./selectors/quiz\";\r\n\r\ninterface OwnProps{\r\n\r\n}\r\ninterface StateProps{\r\n  currentQuizItem?: IQuizListItem,\r\n\tcurrentQuizItemIndex: number,\r\n\tquizListLength: number\r\n}\r\ninterface DispatchProps{\r\n  getQuizListItem: typeof getQuizListItem\r\n}\r\n\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nexport class App extends Component<Props> {\r\n\r\n  componentDidMount(){\r\n    this.props.getQuizListItem(10,\"easy\");\r\n  }\r\n  private renderHeader = () => {\r\n    return (<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n      <Box mt={10} fontWeight=\"fontWeightBold\" fontSize={40} >\r\n        <div style={{ color: \"#e55fff\" }}>Easy</div>\r\n        <div style={{ color: \"#2858fb\" }} >Quizy</div>\r\n      </Box>\r\n      <Box mt={10} fontSize={20} className=\"txt\"> Score : TODO / TODO</Box>\r\n    </Grid>)\r\n  }\r\n\r\n  private renderQuestionInfo = () => {\r\n    const {quizListLength, currentQuizItemIndex, }\r\n    return (<Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '40vh' }}>\r\n      <div className=\"txt question_number\">Question NÂ° TODO / TODO </div>\r\n      <div className=\"txt question_number\"> Category TODO </div>\r\n      <div className=\"txt\" >TypeScript Quiz starter ! Ici nous devrions afficher une question !</div>\r\n    </Grid>)\r\n  }\r\n\r\n  private renderButton = () => {\r\n    return (\r\n      <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-evenly\" >\r\n        <StyledButtonTrue>TRUE</StyledButtonTrue>\r\n        <StyledButtonFalse >FALSE</StyledButtonFalse>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\" >\r\n        {this.renderHeader()}\r\n        {this.renderQuestionInfo()}\r\n        {this.renderButton()}\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any): StateProps =>{\r\n  const s = state as IStore\r\n  return {\r\n  currentQuizItem: getCurrentQuizListItem(s) ,\r\n  currentQuizItemIndex: s.quiz.currentQuizItemIndex,\r\n\tquizListLength: s.quiz.quizListItem.length\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps: any ={\r\n  getQuizListItem\r\n}\r\n\r\nexport default connect<StateProps,DispatchProps,OwnProps>(mapStateToProps, mapDispatchToProps)(App)\r\n\r\n"]},"metadata":{},"sourceType":"module"}