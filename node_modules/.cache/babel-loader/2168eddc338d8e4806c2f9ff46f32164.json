{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\PROJET_CODE\\\\TypeScript-Quiz-Starter-master\\\\src\\\\App.tsx\";\nimport React, { Component } from \"react\";\nimport { Container, Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { StyledButtonTrue, StyledButtonFalse } from \"./style\";\nimport { connect } from \"react-redux\"; // import { AnyAction } from \"redux\";\n// import { IStore } from \"./reducers\";\n\nimport { getQuizListItem, giveAnswer } from \"./actions/quiz\";\nimport { getCurrentQuizListItem } from \"./selectors/quiz\";\nimport { ThunkDispatch } from \"redux-thunk\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderHeader = () => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        mt: 10,\n        fontWeight: \"fontWeightBold\",\n        fontSize: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#e55fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, \"Easy\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#2858fb\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, \"Quizy\")), /*#__PURE__*/React.createElement(Box, {\n        mt: 10,\n        fontSize: 20,\n        className: \"txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, \" Score : \", this.props.scrore, \" / \", this.props.quizListLength));\n    };\n\n    this.renderQuestionInfo = () => {\n      const {\n        quizListLength,\n        currentQuizItemIndex,\n        currentQuizItem\n      } = this.props;\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        style: {\n          minHeight: '40vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"txt question_number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, \"Question N\\xB0 \", currentQuizItemIndex + 1, \" / \", quizListLength, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"txt question_number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, \" Category \", currentQuizItem.category, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"txt\",\n        dangerouslySetInnerHTML: {\n          __html: currentQuizItem.question\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.answerQestion = answer => () => {\n      var _this$props$currentQu;\n\n      const isCorrectAnswer = ((_this$props$currentQu = this.props.currentQuizItem) === null || _this$props$currentQu === void 0 ? void 0 : _this$props$currentQu.correct_answer) === answer;\n      this.props.giveAnswer(isCorrectAnswer, this.props.currentQuizItemIndex === this.props.quizListLength - 1);\n    };\n\n    this.renderButton = () => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justify: \"space-evenly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(StyledButtonTrue, {\n        onClick: this.answerQestion(\"True\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \"TRUE\"), /*#__PURE__*/React.createElement(StyledButtonFalse, {\n        onClick: this.answerQestion(\"False\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"FALSE\"));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getQuizListItem(10, \"easy\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, this.renderHeader(), this.props.currentQuizItem && this.renderQuestionInfo(), this.renderButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const s = state;\n  return {\n    currentQuizItem: getCurrentQuizListItem(s),\n    currentQuizItemIndex: s.quiz.currentQuizItemIndex,\n    quizListLength: s.quiz.quizListItem.length,\n    scrore: s.quiz.score\n  };\n};\n\nconst mapDispatchToProps = () => {\n  getQuizListItem;\n\n  giveAnswer: (isCorrectAnswer, isLastQuestion) => dispatch(giveAnswer(isCorrectAnswer, isLastQuestion));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nfunction dispatch(arg0) {\n  throw new Error(\"Function not implemented.\");\n}","map":{"version":3,"sources":["C:/Users/acer/Desktop/PROJET_CODE/TypeScript-Quiz-Starter-master/src/App.tsx"],"names":["React","Component","Container","Grid","Box","StyledButtonTrue","StyledButtonFalse","connect","getQuizListItem","giveAnswer","getCurrentQuizListItem","ThunkDispatch","App","renderHeader","color","props","scrore","quizListLength","renderQuestionInfo","currentQuizItemIndex","currentQuizItem","minHeight","category","__html","question","answerQestion","answer","isCorrectAnswer","correct_answer","renderButton","componentDidMount","render","mapStateToProps","state","s","quiz","quizListItem","length","score","mapDispatchToProps","isLastQuestion","dispatch","arg0","Error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { StyledButtonTrue, StyledButtonFalse } from \"./style\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\n// import { AnyAction } from \"redux\";\r\n// import { IStore } from \"./reducers\";\r\nimport { getQuizListItem, giveAnswer } from \"./actions/quiz\";\r\nimport { IQuizList, IQuizListItem } from \"./models\";\r\nimport { IStore } from \"./reducers\";\r\nimport { getCurrentQuizListItem } from \"./selectors/quiz\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\ninterface OwnProps{\r\n\r\n}\r\ninterface StateProps{\r\n  currentQuizItem?: IQuizListItem,\r\n\tcurrentQuizItemIndex: number,\r\n\tquizListLength: number,\r\n  scrore : number\r\n}\r\ninterface DispatchProps{\r\n  getQuizListItem: typeof getQuizListItem;\r\n  giveAnswer: typeof giveAnswer;\r\n}\r\n\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nexport class App extends Component<Props> {\r\n\r\n  componentDidMount(){\r\n    this.props.getQuizListItem(10,\"easy\");\r\n  }\r\n  private renderHeader = () => {\r\n    return (<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n      <Box mt={10} fontWeight=\"fontWeightBold\" fontSize={40} >\r\n        <div style={{ color: \"#e55fff\" }}>Easy</div>\r\n        <div style={{ color: \"#2858fb\" }} >Quizy</div>\r\n      </Box>\r\n      <Box mt={10} fontSize={20} className=\"txt\"> Score : {this.props.scrore} / {this.props.quizListLength}</Box>\r\n    </Grid>)\r\n  }\r\n\r\n  private renderQuestionInfo = () => {\r\n    const {quizListLength, currentQuizItemIndex, currentQuizItem} = this.props\r\n    return (<Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '40vh' }}>\r\n      <div className=\"txt question_number\">Question N° {currentQuizItemIndex+1} / {quizListLength} </div>\r\n      <div className=\"txt question_number\"> Category {currentQuizItem!.category} </div>\r\n      <div className=\"txt\" dangerouslySetInnerHTML={{ __html: currentQuizItem!.question}} />\r\n    </Grid>)\r\n  }\r\nprivate answerQestion = (answer: \"True\"|\"False\")=>()=>{\r\n  const isCorrectAnswer = this.props.currentQuizItem?.correct_answer === answer\r\n  this.props.giveAnswer(isCorrectAnswer, this.props.currentQuizItemIndex === this.props.quizListLength-1)\r\n}\r\n  private renderButton = () => {\r\n    return (\r\n      <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-evenly\" >\r\n        <StyledButtonTrue onClick={this.answerQestion(\"True\")} >TRUE</StyledButtonTrue>\r\n        <StyledButtonFalse onClick={this.answerQestion(\"False\")} >FALSE</StyledButtonFalse>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\" >\r\n        {this.renderHeader()}\r\n        {this.props.currentQuizItem && this.renderQuestionInfo()}\r\n        {this.renderButton()}\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any): StateProps =>{\r\n  const s = state as IStore\r\n  return {\r\n  currentQuizItem: getCurrentQuizListItem(s) ,\r\n  currentQuizItemIndex: s.quiz.currentQuizItemIndex,\r\n\tquizListLength: s.quiz.quizListItem.length,\r\n  scrore : s.quiz.score\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps : any = () =>{\r\n  getQuizListItem\r\n  giveAnswer : (isCorrectAnswer: boolean, isLastQuestion: boolean)=> dispatch(giveAnswer(isCorrectAnswer, isLastQuestion))\r\n\r\n}\r\n\r\nexport default connect<StateProps,DispatchProps,OwnProps>(mapStateToProps, mapDispatchToProps)(App)\r\n\r\nfunction dispatch(arg0: (dispatch: import(\"redux-thunk\").ThunkDispatch<{}, {}, import(\"redux\").AnyAction>) => Promise<void>) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}